package store

import (
	"database/sql"

	_ "github.com/lib/pq" // импортируем анонимно, что бы методы не импортировались в наш код
)

// ------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------

// Store - тип структуры хранилища данных
type Store struct {
	config *Config
	db     *sql.DB
}

// ------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------

// NewStore - конструктор нового инстанса Store
//
// Принимает: config - указатель на структуру Config которая содержит конфигурацию
//
// Возвращает: указатель на новый инстанс Store
func NewStore(config *Config) *Store {

	return &Store{
		config: config,
	}

}

// ------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------

// Open - метод структуры хранилища данных Store, который открывает хранилище и возвращает ошибку в случае её возникновения.
func (s *Store) Open() error {

	// Пытаемся подключиться к базе данных
	// В качестве драйвера используем драйвер "postgres"
	// В качестве строки подключения используем DatabaseURL из нашего инстанса конфигурации s.config
	db, err := sql.Open("postgres", s.config.DatabaseURL)

	// Проверяем на ошибки
	if err != nil {
		// Если произошла ошибка, то возвращаем её.
		return err
	}

	// Делаем ping-test к базе данных (который выполнит select 1)
	if err := db.Ping(); err != nil {
		// Если произошла ошибка, то возвращаем её.
		return err
	}

	// Если ошибок нет, то присваиваем переменной db нашего инстанса *Store (s.db) значение локальной переменной db
	s.db = db

	return nil

}

// ------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------

// Close - метод структуры хранилища данных Store, который закрывает хранилище.
func (s *Store) Close() {

	// Закрываем соединение с базой данных
	s.db.Close()

}
